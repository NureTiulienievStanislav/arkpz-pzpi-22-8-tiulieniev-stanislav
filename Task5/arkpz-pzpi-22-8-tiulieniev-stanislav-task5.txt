Міністерство освіти та науки України Харківський національний університет радіоелектроніки


Кафедра ПІ



Звіт
З лабораторної роботи 5
Тема роботи: «РОЗГОРТАННЯ ПРОГРАМНОЇ СИСТЕМИ ТА ДЕМОНСТРАЦІЯ ЇЇ РОБОТИ»
з дисципліни «Аналіз та рефакторинг коду»






Виконав:	Перевірив:
ст. гр. ПЗПІ-22-8	ст. викладач Сокорчук І.П.
Тюлєнєв С.О.	 



Харків 2024
 
Мета роботи: На лабораторній роботі №5 потрібно розгорнути програмну систему та продемонструвати її роботу.
Хід роботи: 
У ході виконання  було розгорнуто програмну систему, що використовує датчики для вимірювання дистанції спереду та ззаду автомобіля. Система була успішно інтегрована з MQTT-брокером, забезпечуючи передачу зібраних даних на сервер для подальшої обробки та зберігання.
Датчики коректно вимірюють дистанції, результати вимірювань формуються у форматі JSON та публікуються в MQTT-топік. На сервері дані успішно приймаються, що підтверджує стабільну роботу програмної системи.
Вимоги середовища та компоненти:
1.	Мікроконтролер: ESP32 із прошивкою для роботи з датчиками та MQTT.
2.	Датчики: HC-SR04 або аналогічні ультразвукові датчики для вимірювання відстані.
3.	Програмні бібліотеки:
	Arduino IDE з бібліотеками для роботи з MQTT (PubSubClient) та датчиками.
	Сервер MQTT (наприклад, Mosquitto) для обробки повідомлень.
4.	Серверна інфраструктура:
	Сервер для розгортання MQTT-брокера та бази даних.
	PostgreSQL або інша СУБД для зберігання даних.
5.	Мережа: Wi-Fi для підключення IoT-клієнта до брокера.
6.	Користувацьке середовище: Пристрій із веб-браузером або додатком для перегляду отриманих даних.
7.	База даних: PostgreSQL.
Інструменти та технології:
1.	Апаратна частина:
ESP32: Для керування датчиками і передачі даних через Wi-Fi.
HC-SR04: Ультразвукові датчики для вимірювання відстані спереду і ззаду.
2.	Програмні інструменти та середовища:
Visual Studio Code: Для роботи із серверною частиною та документування проекту.
3.	Програмні бібліотеки:
PubSubClient: Для інтеграції ESP32 з MQTT-брокером.
NewPing: Для роботи з ультразвуковими датчиками HC-SR04.
4.	Протоколи і мережі:
Wi-Fi: Для з’єднання ESP32 з мережею.
MQTT: Легкий протокол для обміну даними між IoT-клієнтом і сервером.
5.	Серверна частина:
Mosquitto (MQTT-брокер): Для обробки і пересилки даних між клієнтом і сервером.
PostgreSQL: Для зберігання вимірювань від датчиків.
Node.js: Для розробки серверної логіки.
6.	Інструменти тестування і налагодження:
Serial Monitor в Arduino IDE: Для перевірки роботи ESP32 і відладки коду.
MQTT Explorer: Для перевірки публікацій повідомлень у топіки.
Postman або аналогічний інструмент: Для тестування API, якщо було реалізовано серверний інтерфейс.
7.	Формат даних:
JSON: Використовувався для передачі вимірювань від датчиків до сервера.

Висновки: У процесі виконання проекту була успішно розроблена та розгорнута IoT-система для моніторингу дистанції спереду та ззаду автомобіля. Система забезпечує збирання даних за допомогою ультразвукових датчиків, обробку цих даних на ESP32 та передачу їх на сервер через MQTT-протокол. Зібрані дані зберігаються в базі даних для подальшого аналізу або використання в реальних сценаріях.
Посилання на відео: https://youtu.be/thnhMUmvylo
